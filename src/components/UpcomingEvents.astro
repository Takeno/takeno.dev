---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

const currentLocale = Astro.currentLocale || 'it';

const today = new Date();
const upcomingEvents = (await getCollection('events'))
  .filter((event) => event.data.date > today)
  .sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf());

if (upcomingEvents.length === 0) {
  return null;
}

const translations = {
  it: {
    title: 'Prossimi Talk',
  },
  en: {
    title: 'Upcoming Talks',
  },
}[currentLocale]!;
---

<div class="bg-gray-800 rounded-lg p-6">
  <h2 class="text-xl font-bold text-white mb-4">{translations.title}</h2>
  <div class="space-y-6">
    {
      upcomingEvents.map((event) => (
        <div class="border-l-2 border-purple-500 pl-4">
          <h3 class="text-white font-medium">
            {event.data.eventLink ? (
              <a
                href={event.data.eventLink}
                target="_blank"
                rel="noopener noreferrer"
                class="hover:text-primary transition"
              >
                {event.data.event}
              </a>
            ) : (
              event.data.event
            )}
          </h3>
          <p class="text-gray-400">
            <FormattedDate date={event.data.date} /> @ {event.data.location}
          </p>
          {event.data.speaker && <p class="text-primary mt-2">{event.data.talk}</p>}
        </div>
      ))
    }
  </div>
</div>
